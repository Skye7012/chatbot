import streamlit as st
from PIL import Image
from streamlit_star_rating import st_star_rating
from supabase_client import SupabaseClient
from model_utils import stylize_image

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üé® AI-–•—É–¥–æ–∂–Ω–∏–∫: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Å—Ç–∏–ª–µ —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Supabase
supabase = SupabaseClient()

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ä–µ–¥–Ω—é—é –æ—Ü–µ–Ω–∫—É –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
avg_rating = supabase.get_average_rating()
st.badge(f"‚≠ê –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –º–æ–¥–µ–ª–∏: {avg_rating}/10", color="gray")

# –í—ã–±–æ—Ä —Å—Ç–∏–ª—è
style = st.selectbox(
    "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å —Ö—É–¥–æ–∂–Ω–∏–∫–∞:",
    ("–í–∞–Ω –ì–æ–≥", "–ú—É–Ω–∫", "–ü–∏–∫–∞—Å—Å–æ"),
    key="style_selectbox"
)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à–µ —Ñ–æ—Ç–æ:", type=[
                                 "jpg", "jpeg"], key="file_uploader")

# –ò—Å–ø–æ–ª—å–∑—É–µ–º session_state –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
if 'processed' not in st.session_state:
    st.session_state.processed = False
if 'feedback_sent' not in st.session_state:
    st.session_state.feedback_sent = False
if 'last_uploaded_file' not in st.session_state:
    st.session_state.last_uploaded_file = None
if 'last_style' not in st.session_state:
    st.session_state.last_style = style

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ò–õ–ò —Å—Ç–∏–ª—å —Ö—É–¥–æ–∂–Ω–∏–∫–∞
if (uploaded_file != st.session_state.last_uploaded_file or
        style != st.session_state.last_style):

    st.session_state.last_uploaded_file = uploaded_file
    st.session_state.last_style = style
    st.session_state.processed = False
    st.session_state.feedback_sent = False
    if 'stylized_image' in st.session_state:
        del st.session_state.stylized_image

if uploaded_file is not None:
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    image = Image.open(uploaded_file)
    st.image(image, caption="–í–∞—à–µ —Ñ–æ—Ç–æ", use_container_width=True)

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    if not st.session_state.processed and st.button("–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —Å—Ç–∏–ª—å " + style):
        st.session_state.processed = True
        st.session_state.feedback_sent = False

        st.write("‚è≥ –ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞...")
        try:
            style_image = {
                "–í–∞–Ω –ì–æ–≥": "artists/–≤–∞–Ω_–≥–æ–≥.jpg", "–ú—É–Ω–∫": "artists/–º—É–Ω–∫.jpg", "–ü–∏–∫–∞—Å—Å–æ": "artists/–ø–∏–∫–∞—Å—Å–æ.jpg"
            }[style]

            st.session_state.stylized_image = stylize_image(
                image, style_image)
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞: {e}")
            st.warning("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")
            st.session_state.processed = False

    if st.session_state.processed and 'stylized_image' in st.session_state:
        st.image(st.session_state.stylized_image,
                 caption=f"–°—Ç–∏–ª—å: {style}")

        # –§–æ—Ä–º–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞
        if not st.session_state.feedback_sent:
            st.subheader("–ü–æ–Ω—Ä–∞–≤–∏–ª—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç?")

            # –†–µ–π—Ç–∏–Ω–≥ –≤ –≤–∏–¥–µ 10 –∑–≤—ë–∑–¥
            st.write("–û—Ü–µ–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–æ—Ç 1 –¥–æ 10 –∑–≤—ë–∑–¥):")
            stars = st_star_rating(label="", maxValue=10,
                                   defaultValue=8, key="rating")

            # –ü–æ–ª–µ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ)
            comment = st.text_area(
                "–í–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):", key="comment")

            if st.button('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤'):
                if stars > 0:
                    if supabase.submit_feedback(stars, comment if comment else None):
                        st.success('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!')
                        st.session_state.feedback_sent = True
                    pass
                else:
                    st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ü–µ–Ω–∫—É")
